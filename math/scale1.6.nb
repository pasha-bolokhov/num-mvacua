(************** Content-type: application/mathematica **************

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     32137,        995]*)
(*NotebookOutlinePosition[     33086,       1025]*)
(*  CellTagsIndexPosition[     33042,       1021]*)
(*WindowFrame->Normal*)



Notebook[{
Cell[BoxData[""], "Input"],

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\(\(<< 
      Graphics`MultipleListPlot`\)\(\[IndentingNewLine]\)
    \)\)\)], "Input"],

Cell[BoxData[
    \(<< LinearAlgebra`MatrixManipulation`\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)\(\[Tau]\  = 
      1.6  \[ImaginaryI]\)\)\)], "Input"],

Cell[BoxData[
    \(1.6`\ \[ImaginaryI]\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{
      StyleBox["\[Omega]1",
        FontSize->16], "=", "  ", \(\[Pi]\ \[ImaginaryI]\)}]], "Input"],

Cell[BoxData[
    \(\[ImaginaryI]\ \[Pi]\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\[Omega]2 = \ \[Omega]1\ \[Tau]\)], "Input"],

Cell[BoxData[
    \(\(-5.026548245743669`\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(gg\  = \ 
      WeierstrassInvariants\ [\ {\[Omega]1, \ \[Omega]2}\ ]\)], "Input"],

Cell[BoxData[
    \(WeierstrassInvariants[{\[ImaginaryI]\ \[Pi], \
\(-5.026548245743669`\)}]\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(WP[x_]\  := \ WeierstrassPPrime[\ x, \ gg\ ]\)], "Input"],

Cell[BoxData[
    \(eqn[x2_\ ]\  := \ 
      WP\ [\ x2\  + \ \ \[Omega]2\ ]\  + \ \(1\/4\) \((\ 
            WP[\ x2\ ]\  + \ WP[x2\  + \ \[Omega]1]\ )\)\)], "Input"],

Cell[BoxData[
    \(\(\(sys\  := \ {\ eqn[x2]\  \[Equal] \ 0\ }\)\(\[IndentingNewLine]\)
    \)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(np = 300\)], "Input"],

Cell[BoxData[
    \(300\)], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[{
    \(\(Clear \((soln1)\);\)\), "\[IndentingNewLine]", 
    \(\(Clear \((soln2)\);\)\)}], "Input"],

Cell[BoxData[""], "Input"],

Cell[BoxData[
    \(\(soln2\  = \ Table[\ {\ Null, \ Null}, \ {n, 1, np}];\)\)], "Input"],

Cell[BoxData[
    \(\(\(nuseful = 0;\)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)
    \)\)], "Input"],

Cell[BoxData[
    \(\(\(der\  = \ 
        Table[\ {\ Null, \ Null}, \ {n, 1, np}];\)\(\[IndentingNewLine]\)
    \)\)], "Input"],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(For\ [\ i\  = \ 1, \ 
      i\  \[LessEqual] \ np, \ \(i++\), \[IndentingNewLine]\t
      x20\  = \ Random\ [\ 
          Complex, \ {\ 0.1\  + \ 0.1\ \[ImaginaryI], \ 
            2.0 \((Abs[\[Omega]2]\  + \ \[Omega]1)\)\ }\ ]; \
\[IndentingNewLine]\t
      x200 = \ Random\ [\ 
          Complex, \ {\ 0.1\  + \ 0.1\ \[ImaginaryI], \ 
            2.0 \((Abs[\[Omega]2]\  + \ \[Omega]1)\)\ }\ ]; \
\[IndentingNewLine]\tgoterror = False; \[IndentingNewLine]\t
      Check[result\  = \ 
          FindRoot[\ 
            eqn[x2]\  \[Equal] \ 0, \ {\ x2, \ x20, \ 
              x200\ }]\ , \[IndentingNewLine]\t\t\t\tgoterror = 
          True]; \[IndentingNewLine]\t\ If[
        goterror === 
          False, \[IndentingNewLine]\t\(nuseful++\); \[IndentingNewLine]\t\ \
x2r\ \ \  = \ \ x2 /. 
            result; \[IndentingNewLine]\ \ \ \ \ \ \ \ \ \ soln2[\([nuseful, 
              1]\)]\  = \ Re[x2r]; \[IndentingNewLine]\t
        soln2[\([nuseful, 2]\)]\  = \ Im[x2r]; \[IndentingNewLine]\t
        val2\  = \ eqn[x2r]\ \  // N; \[IndentingNewLine]\t
        der[\([nuseful, \ 1]\)]\  = \ Re[val2]; \[IndentingNewLine]\t
        der[\([nuseful, \ 2]\)]\  = \ 
          Im[val2];\[IndentingNewLine]]\[IndentingNewLine]]\)], "Input"],

Cell[BoxData[
    \(FindRoot::"frsec" \(\(:\)\(\ \)\) 
      "Secant method failed to converge to the prescribed accuracy after \
\!\(15\) iterations."\)], "Message"],

Cell[BoxData[
    \(FindRoot::"frsec" \(\(:\)\(\ \)\) 
      "Secant method failed to converge to the prescribed accuracy after \
\!\(15\) iterations."\)], "Message"],

Cell[BoxData[
    \(FindRoot::"frsec" \(\(:\)\(\ \)\) 
      "Secant method failed to converge to the prescribed accuracy after \
\!\(15\) iterations."\)], "Message"],

Cell[BoxData[
    \(General::"stop" \(\(:\)\(\ \)\) 
      "Further output of \!\(FindRoot :: \"frsec\"\) will be suppressed \
during this calculation."\)], "Message"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Message",
  GeneratedCell->False,
  CellAutoOverwrite->False]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(nuseful\)], "Input"],

Cell[BoxData[
    \(257\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(useful2\  = \ 
        SubMatrix[soln2, \ {1, 1}, \ {nuseful, 2}];\)\)], "Input"],

Cell[BoxData[
    \(\(deruseful\  = \ SubMatrix[der, {1, 1}, {nuseful, 4}];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ListPlot[useful2, 
      PlotRange \[Rule] {{0.0, 2.0\ Abs[\[Omega]2]}, {0.0, 
            2.0\ Abs[\[Omega]1]}}]\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-2.88398e-17 0.0994718 1.33086e-17 0.0983632 [
[.19894 -0.0125 -3 -9 ]
[.19894 -0.0125 3 0 ]
[.39789 -0.0125 -3 -9 ]
[.39789 -0.0125 3 0 ]
[.59683 -0.0125 -3 -9 ]
[.59683 -0.0125 3 0 ]
[.79577 -0.0125 -3 -9 ]
[.79577 -0.0125 3 0 ]
[.99472 -0.0125 -6 -9 ]
[.99472 -0.0125 6 0 ]
[-0.0125 .09836 -6 -4.5 ]
[-0.0125 .09836 0 4.5 ]
[-0.0125 .19673 -6 -4.5 ]
[-0.0125 .19673 0 4.5 ]
[-0.0125 .29509 -6 -4.5 ]
[-0.0125 .29509 0 4.5 ]
[-0.0125 .39345 -6 -4.5 ]
[-0.0125 .39345 0 4.5 ]
[-0.0125 .49182 -6 -4.5 ]
[-0.0125 .49182 0 4.5 ]
[-0.0125 .59018 -6 -4.5 ]
[-0.0125 .59018 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.19894 0 m
.19894 .00625 L
s
[(2)] .19894 -0.0125 0 1 Mshowa
.39789 0 m
.39789 .00625 L
s
[(4)] .39789 -0.0125 0 1 Mshowa
.59683 0 m
.59683 .00625 L
s
[(6)] .59683 -0.0125 0 1 Mshowa
.79577 0 m
.79577 .00625 L
s
[(8)] .79577 -0.0125 0 1 Mshowa
.99472 0 m
.99472 .00625 L
s
[(10)] .99472 -0.0125 0 1 Mshowa
.125 Mabswid
.04974 0 m
.04974 .00375 L
s
.09947 0 m
.09947 .00375 L
s
.14921 0 m
.14921 .00375 L
s
.24868 0 m
.24868 .00375 L
s
.29842 0 m
.29842 .00375 L
s
.34815 0 m
.34815 .00375 L
s
.44762 0 m
.44762 .00375 L
s
.49736 0 m
.49736 .00375 L
s
.5471 0 m
.5471 .00375 L
s
.64657 0 m
.64657 .00375 L
s
.6963 0 m
.6963 .00375 L
s
.74604 0 m
.74604 .00375 L
s
.84551 0 m
.84551 .00375 L
s
.89525 0 m
.89525 .00375 L
s
.94498 0 m
.94498 .00375 L
s
.25 Mabswid
0 0 m
1 0 L
s
0 .09836 m
.00625 .09836 L
s
[(1)] -0.0125 .09836 1 0 Mshowa
0 .19673 m
.00625 .19673 L
s
[(2)] -0.0125 .19673 1 0 Mshowa
0 .29509 m
.00625 .29509 L
s
[(3)] -0.0125 .29509 1 0 Mshowa
0 .39345 m
.00625 .39345 L
s
[(4)] -0.0125 .39345 1 0 Mshowa
0 .49182 m
.00625 .49182 L
s
[(5)] -0.0125 .49182 1 0 Mshowa
0 .59018 m
.00625 .59018 L
s
[(6)] -0.0125 .59018 1 0 Mshowa
.125 Mabswid
0 .01967 m
.00375 .01967 L
s
0 .03935 m
.00375 .03935 L
s
0 .05902 m
.00375 .05902 L
s
0 .07869 m
.00375 .07869 L
s
0 .11804 m
.00375 .11804 L
s
0 .13771 m
.00375 .13771 L
s
0 .15738 m
.00375 .15738 L
s
0 .17705 m
.00375 .17705 L
s
0 .2164 m
.00375 .2164 L
s
0 .23607 m
.00375 .23607 L
s
0 .25574 m
.00375 .25574 L
s
0 .27542 m
.00375 .27542 L
s
0 .31476 m
.00375 .31476 L
s
0 .33443 m
.00375 .33443 L
s
0 .35411 m
.00375 .35411 L
s
0 .37378 m
.00375 .37378 L
s
0 .41313 m
.00375 .41313 L
s
0 .4328 m
.00375 .4328 L
s
0 .45247 m
.00375 .45247 L
s
0 .47214 m
.00375 .47214 L
s
0 .51149 m
.00375 .51149 L
s
0 .53116 m
.00375 .53116 L
s
0 .55083 m
.00375 .55083 L
s
0 .57051 m
.00375 .57051 L
s
0 .60985 m
.00375 .60985 L
s
.25 Mabswid
0 0 m
0 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.008 w
.5 .30902 Mdot
.80932 .20403 Mdot
.18757 .61803 Mdot
.80932 .41401 Mdot
.19068 .20403 Mdot
.80932 .41401 Mdot
.19068 .20403 Mdot
.80932 .41401 Mdot
.19068 .41401 Mdot
.19068 .20403 Mdot
.80932 .20403 Mdot
.5 .30902 Mdot
.5 .30902 Mdot
.18757 .61803 Mdot
.19068 .20403 Mdot
.80932 .20403 Mdot
.80932 .20403 Mdot
.19068 .41401 Mdot
.80932 .41401 Mdot
.80932 .41401 Mdot
.19068 .41401 Mdot
.19068 .41401 Mdot
.80932 .41401 Mdot
.5 .30902 Mdot
.80932 .20403 Mdot
.5 .30902 Mdot
.80932 .41401 Mdot
.18757 .61803 Mdot
.80932 .20403 Mdot
.5 .30902 Mdot
.80932 .20403 Mdot
.5 .30902 Mdot
.5 .30902 Mdot
.19068 .20403 Mdot
.80932 .41401 Mdot
.19068 .20403 Mdot
.19068 .41401 Mdot
.80932 .41401 Mdot
.80932 .20403 Mdot
.80932 .20403 Mdot
.19068 .20403 Mdot
.19068 .20403 Mdot
.80932 .20403 Mdot
.19068 .41401 Mdot
.80932 .20403 Mdot
.19068 .41401 Mdot
.19068 .41401 Mdot
.19068 .20403 Mdot
.19068 .20403 Mdot
.80932 .41401 Mdot
.5 .30902 Mdot
.5 .30902 Mdot
.19068 .20403 Mdot
.19068 .20403 Mdot
.19068 .41401 Mdot
.80932 .41401 Mdot
.19068 .41401 Mdot
.19068 .20403 Mdot
.19068 .20403 Mdot
.80932 .41401 Mdot
.19068 .20403 Mdot
.19068 .20403 Mdot
.19068 .41401 Mdot
0 .15193 Mdot
.19068 .20403 Mdot
.19068 .41401 Mdot
.80932 .41401 Mdot
.80932 .20403 Mdot
.5 .30902 Mdot
.80932 .20403 Mdot
.19068 .41401 Mdot
.19068 .20403 Mdot
.19068 .20403 Mdot
.18757 0 Mdot
.80932 .20403 Mdot
.19068 .20403 Mdot
.19068 .41401 Mdot
.80932 .41401 Mdot
.19068 .20403 Mdot
.19068 .41401 Mdot
.80932 .41401 Mdot
.19068 .41401 Mdot
.19068 .41401 Mdot
.80932 .20403 Mdot
.19068 .41401 Mdot
.5 .30902 Mdot
.80932 .20403 Mdot
.5 .30902 Mdot
.19068 .41401 Mdot
.80932 .41401 Mdot
.19068 .20403 Mdot
.80932 .41401 Mdot
.80932 .41401 Mdot
.19068 .20403 Mdot
.19068 .41401 Mdot
.5 .30902 Mdot
.5 .30902 Mdot
.19068 .41401 Mdot
.19068 .20403 Mdot
.5 .30902 Mdot
.19068 .41401 Mdot
.80932 .41401 Mdot
.5 .30902 Mdot
.19068 .20403 Mdot
.80932 .41401 Mdot
.80932 .20403 Mdot
.19068 .41401 Mdot
.80932 .20403 Mdot
.80932 .20403 Mdot
.19068 .20403 Mdot
.81243 0 Mdot
.81243 .61803 Mdot
.80932 .20403 Mdot
.19068 .20403 Mdot
.80932 .20403 Mdot
.5 .30902 Mdot
.80932 .20403 Mdot
.19068 .41401 Mdot
.80932 .20403 Mdot
.19068 .41401 Mdot
.19068 .41401 Mdot
.19068 .20403 Mdot
.19068 .20403 Mdot
.5 .30902 Mdot
.19068 .41401 Mdot
.19068 .41401 Mdot
.80932 .41401 Mdot
.19068 .41401 Mdot
.80932 .41401 Mdot
.5 .30902 Mdot
.80932 .20403 Mdot
.5 .30902 Mdot
.80932 .20403 Mdot
.19068 .41401 Mdot
.5 .30902 Mdot
.19068 .41401 Mdot
.5 .30902 Mdot
.80932 .41401 Mdot
.18757 0 Mdot
.19068 .20403 Mdot
.19068 .20403 Mdot
.5 .30902 Mdot
.5 .30902 Mdot
.80932 .20403 Mdot
.80932 .20403 Mdot
.80932 .20403 Mdot
.19068 .41401 Mdot
.80932 .41401 Mdot
.80932 .41401 Mdot
.80932 .41401 Mdot
.19068 .41401 Mdot
.19068 .20403 Mdot
.80932 .20403 Mdot
.18757 0 Mdot
.19068 .41401 Mdot
.80932 .41401 Mdot
.19068 .41401 Mdot
.80932 .41401 Mdot
.80932 .20403 Mdot
.80932 .20403 Mdot
.19068 .20403 Mdot
.19068 .41401 Mdot
.19068 .41401 Mdot
.19068 .41401 Mdot
.5 .30902 Mdot
.80932 .20403 Mdot
.80932 .41401 Mdot
.5 .30902 Mdot
.80932 .20403 Mdot
.19068 .41401 Mdot
.19068 .20403 Mdot
.19068 .41401 Mdot
.19068 .20403 Mdot
.19068 .20403 Mdot
.80932 .41401 Mdot
.80932 .41401 Mdot
.80932 .41401 Mdot
.19068 .20403 Mdot
.80932 .41401 Mdot
.80932 .41401 Mdot
.18757 0 Mdot
.5 .30902 Mdot
.80932 .20403 Mdot
.19068 .41401 Mdot
.5 .30902 Mdot
.5 .30902 Mdot
.80932 .20403 Mdot
.80932 .41401 Mdot
.80932 .41401 Mdot
.19068 .41401 Mdot
.80932 .20403 Mdot
.19068 .41401 Mdot
.5 .30902 Mdot
.80932 .41401 Mdot
.5 .30902 Mdot
.18757 0 Mdot
.19068 .20403 Mdot
.80932 .20403 Mdot
.19068 .20403 Mdot
.19068 .41401 Mdot
.5 .30902 Mdot
.80932 .41401 Mdot
.19068 .41401 Mdot
.5 .30902 Mdot
.5 .30902 Mdot
.81243 0 Mdot
.5 .30902 Mdot
.80932 .20403 Mdot
.5 .30902 Mdot
.81243 0 Mdot
.5 .30902 Mdot
.19068 .41401 Mdot
.80932 .41401 Mdot
.19068 .41401 Mdot
.80932 .41401 Mdot
.19068 .41401 Mdot
.19068 .20403 Mdot
.80932 .41401 Mdot
.80932 .41401 Mdot
.19068 .41401 Mdot
.80932 .41401 Mdot
.5 .30902 Mdot
.19068 .41401 Mdot
.18757 .61803 Mdot
.80932 .41401 Mdot
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{363.812, 224.875},
  ImageMargins->{{51, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40007600016B000`400?l00000o`00003oo`3oooo7
0?ooo`00o`3oooo70?ooo`00o`3oooo70?ooo`00H`3oool600000540oooo0`00001@0?ooo`@00000
D@3oool4000004d0oooo1@0000030?ooo`@000001`3oool006@0oooo00D000000?ooo`3oool0oooo
0000001B0?ooo`030000003oool0oooo04h0oooo00<000000?ooo`3oool00P3oool00`000000oooo
0?ooo`1=0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0C03oool00`000000oooo
0?ooo`020?ooo`8000000P3oool2000000H0oooo001U0?ooo`800000D@3oool5000004l0oooo00<0
00000?ooo`3oool00P3oool00`000000oooo0?ooo`1=0?ooo`030000003oool0oooo0080oooo00<0
00000?ooo`3oool0C03oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0080oooo00<0
00000?ooo`3oool0103oool006L0oooo00<000000?ooo`3oool0CP3oool010000000oooo0?ooo`00
001@0?ooo`8000000P3oool2000004l0oooo0P0000020?ooo`800000CP3oool00`000000oooo0?oo
o`020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0103oool006P0oooo00<00000
0?ooo`3oool0CP3oool00`000000oooo0000001@0?ooo`030000003oool0000000800000D@3oool4
000004l0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo00@0oooo001X0?ooo`030000003oool0oooo04h0oooo00<000000?ooo`000000D03oool00`00
0000oooo0?ooo`1B0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0C03oool00`00
0000oooo0?ooo`020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0103oool006<0
oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`1?0?ooo`800000D@3oool00`000000
oooo0?ooo`1A0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0C03oool00`000000
oooo0?ooo`020?ooo`8000000P3oool2000000H0oooo001T0?ooo`@00000D`3oool00`000000oooo
0?ooo`1@0?ooo`@00000D03oool4000004h0oooo0P0000050?ooo`@000001`3oool00?l0ooooa`3o
ool00?l0ooooa`3oool00?l0ooooa`3oool00?l0ooooa`3oool00?l0ooooa`3oool00640oooo0P00
003o0?ooo`T0oooo0P00001I0?ooo`004@3ooooo00000:`000002P3oool00140oooo00<000000?oo
o`3oool04P3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo01<0oooo00<000000?oo
o`3oool04P3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo0180oooo00<000000?oo
o`3oool04P3oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo0180oooo00<000000?oo
o`3oool04P3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo0180oooo00<000000?oo
o`3oool04`3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo0180oooo00<000000?oo
o`3oool04P3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo01<0oooo00<000000?oo
o`3oool04P3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo00X0oooo000A0?ooo`03
0000003oool0oooo0180oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`0C0?ooo`03
0000003oool0oooo0180oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`0B0?ooo`03
0000003oool0oooo0180oooo00<000000?ooo`3oool04`3oool00`000000oooo0?ooo`0B0?ooo`03
0000003oool0oooo0180oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`0B0?ooo`03
0000003oool0oooo01<0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`0B0?ooo`03
0000003oool0oooo0180oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`0C0?ooo`03
0000003oool0oooo0180oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`0:0?ooo`00
4@3oool00`000000oooo0?ooo`1B0?ooo`030000003oool0oooo0580oooo00<000000?ooo`3oool0
D@3oool00`000000oooo0?ooo`1B0?ooo`030000003oool0oooo0580oooo00<000000?ooo`3oool0
2P3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o
0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3o
ool0o`3ooonc0?ooo`004@3oool300000?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3o
oonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo
0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo
0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<00000
0?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`<0
0000o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003o
ool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`00
0000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo
00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A
0?ooo`<00000o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`03
0000003oool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3o
ool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool0
0140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0
oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo0`00003o0?oook<0oooo000A
0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?oo
o`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo
/`3oool000H0oooo1@0000060?ooo`030000003oool0oooo0?l0oooo/`3oool000P0oooo00<00000
0?ooo`3oool01P3oool00`000000oooo0?ooo`3o0?oook<0oooo00080?ooo`030000003oool0oooo
00H0oooo00<000000?ooo`3oool0o`3ooonc0?ooo`00203oool00`000000oooo0?ooo`060?ooo`@0
0000o`3ooonb0?ooo`00203oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo0?l0oooo
/`3oool000P0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`3o0?oook<0oooo0008
0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0o`3ooonc0?ooo`001`3oool20000
00P0oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0
oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3o
oonc0?ooo`004@3oool300000?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?oo
o`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo
/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o
0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3o
ool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`<00000o`3o
oonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo
0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo
0?ooo`3o0?oook<0oooo000A0?ooo`800000o`3ooond0?ooo`004@3oool200000?l0oooo]03oool0
0140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool300000?l0oooo/`3oool00140oooo
00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A
0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?oo
o`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo
/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool300000?l0oooo/`3oool0
0140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0
oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3o
oonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo00050?ooo`H000001P3oool00`00
0000oooo0?ooo`3o0?oook<0oooo00060?ooo`050000003oool0oooo0?ooo`0000001P3oool00`00
0000oooo0?ooo`3o0?oook<0oooo00070?ooo`800000203oool00`000000oooo0?ooo`3o0?oook<0
oooo00090?ooo`030000003oool0oooo00D0oooo1000003o0?oook80oooo000:0?ooo`030000003o
ool0oooo00@0oooo00<000000?ooo`3oool0o`3ooonc0?ooo`002P3oool00`000000oooo0?ooo`04
0?ooo`030000003oool0oooo04h0oooo0P00003o0?ooo`L0oooo0P00001J0?ooo`001@3oool00`00
0000oooo0?ooo`020?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0CP3oool20000
0?l0oooo1`3oool2000005X0oooo00060?ooo`@000001`3oool00`000000oooo0?ooo`3o0?oook<0
oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3o
oonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`<00000o`3ooonc0?oo
o`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo
/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o
0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3o
ool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003o
ool0oooo0?l0oooo/`3oool00140oooo0`00003o0?oook<0oooo000A0?ooo`030000003oool0oooo
0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo
0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<00000
0?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`03
0000003oool0oooo0?l0oooo/`3oool00140oooo0`00003o0?oook<0oooo000A0?ooo`030000003o
ool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`00
0000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo
00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A
0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo0`00003o0?oook<0oooo000A0?ooo`03
0000003oool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3o
ool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool0
0140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`001@3oool4000000P0oooo00<000000?ooo`3o
ool0o`3ooonc0?ooo`002@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo0?l0oooo
/`3oool000T0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`3o0?oook<0oooo0009
0?ooo`030000003oool0oooo00D0oooo1000003o0?oook80oooo00070?ooo`800000203oool00`00
0000oooo0?ooo`3o0?oook<0oooo00090?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3o
ool0o`3ooonc0?ooo`002@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo0?l0oooo
/`3oool000H0oooo0`0000080?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<00000
0?ooo`3oool0dP3oool200000=h0oooo000A0?ooo`030000003oool0oooo0=80oooo0P00003N0?oo
o`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`<00000o`3ooonc0?ooo`004@3o
ool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool0
0140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0
oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3o
oonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo
0?l0oooo/`3oool00140oooo0`00003o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo
/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o
0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3o
ool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003o
ool0oooo0?l0oooo/`3oool00140oooo0`00003o0?oook<0oooo000A0?ooo`030000003oool0oooo
0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo
0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<00000
0?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`03
0000003oool0oooo0?l0oooo/`3oool00140oooo0`00003o0?oook<0oooo000A0?ooo`030000003o
ool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`00
0000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo
00<000000?ooo`3oool0o`3ooonc0?ooo`001`3oool3000000L0oooo00<000000?ooo`3oool0o`3o
oonc0?ooo`00203oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo0?l0oooo/`3oool0
00D0oooo1@0000070?ooo`030000003oool0oooo0?l0oooo/`3oool000D0oooo00@000000?ooo`3o
ool00000203oool400000?l0oooo/P3oool000H0oooo00<000000?ooo`000000203oool00`000000
oooo0?ooo`3o0?oook<0oooo00060?ooo`030000003oool0000000P0oooo00<000000?ooo`3oool0
o`3ooonc0?ooo`001`3oool2000000P0oooo00<000000?ooo`3oool0o`3ooonc0?ooo`00203oool0
0`000000oooo0?ooo`060?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<000000?oo
o`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000
003oool0oooo0?l0oooo/`3oool00140oooo0`00001>0?ooo`800000o`3oool70?ooo`800000FP3o
ool00140oooo00<000000?ooo`3oool0CP3oool200000?l0oooo1`3oool2000005X0oooo000A0?oo
o`030000003oool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`00
4@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3o
ool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oo
ok<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo0`00003o0?oook<0oooo
000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc
0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0
oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?oo
o`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo0`00003o0?oo
ok<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0
o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0
oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000
oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo0`00
003o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<000000?oo
o`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000
003oool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`001P3oool4
000000L0oooo00<000000?ooo`3oool0o`3ooonc0?ooo`002P3oool00`000000oooo0?ooo`040?oo
o`030000003oool0oooo0?l0oooo/`3oool000X0oooo00<000000?ooo`3oool0103oool00`000000
oooo0?ooo`3o0?oook<0oooo000:0?ooo`030000003oool0oooo00@0oooo1000003o0?oook80oooo
00060?ooo`030000003oool0oooo008000001P3oool00`000000oooo0?ooo`3o0?oook<0oooo0006
0?ooo`@000001`3oool00`000000oooo0?ooo`3o0?oook<0oooo00060?ooo`030000003oool0oooo
00P0oooo00<000000?ooo`3oool0o`3ooonc0?ooo`001P3oool5000000H0oooo00<000000?ooo`3o
ool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003o
ool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool30000
0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo
0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<00000
0?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`03
0000003oool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3o
ool300000?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`00
0000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo
00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A
0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?oo
o`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`<00000o`3ooonc0?ooo`004@3o
ool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool0
0140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0
oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140oooo00<000000?ooo`3oool0o`3o
oonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`<00000o`3ooonc0?oo
o`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo
/`3oool00140oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o
0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool000H0oooo100000070?ooo`03
0000003oool0oooo0?l0oooo/`3oool000D0oooo00<000000?ooo`3oool00P3oool00`000000oooo
0?ooo`040?ooo`030000003oool0oooo0?l0oooo/`3oool000D0oooo00<000000?ooo`3oool00P3o
ool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0?l0oooo/`3oool000D0oooo0P000002
0?ooo`8000001P3oool400000?l0oooo/P3oool000D0oooo00<000000?ooo`0000000P0000070?oo
o`030000003oool0oooo0?l0oooo/`3oool000D0oooo00<000000?ooo`3oool02@3oool00`000000
oooo0?ooo`3o0?oook<0oooo00060?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0
o`3ooonc0?ooo`001`3oool4000000H0oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool0
0`000000oooo0?ooo`3o0?oook<0oooo000A0?ooo`030000003oool0oooo0?l0oooo/`3oool00140
oooo00<000000?ooo`3oool0o`3ooonc0?ooo`004@3oool300000?l0oooo/`3oool00140oooo00<0
00000?ooo`3oool0o`3ooonc0?ooo`004@3oool00`000000oooo0?ooo`3o0?oook<0oooo000A0?oo
o`030000003oool0oooo0?l0oooo/`3oool00001\
\>"],
  ImageRangeCache->{{{0, 453.75}, {280.062, 0}} -> {-0.412742, -0.395387, \
0.0294761, 0.0298084}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(pref\  = \ 
      StringJoin["\<scale\>"\ , \ 
        ToString[Abs[\[Tau]]], "\<_vacua\>"]\)], "Input"],

Cell[BoxData[
    \("scale1.6_vacua"\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\(Export[StringJoin[pref, "\<_x2.dat\>"], \ 
      useful2, \ "\<Table\>"]\)\)\)], "Input"],

Cell[BoxData[
    \("scale1.6_vacua_x2.dat"\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Export[StringJoin[pref, "\<_der.dat\>"], 
      deruseful, \ "\<Table\>"]\)], "Input"],

Cell[BoxData[
    \("scale1.6_vacua_der.dat"\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(strm\  = \ 
        OpenWrite[StringJoin[pref, "\<.math.dat\>"], 
          BinaryFormat \[Rule] True];\)\)], "Input"],

Cell[BoxData[
    \(OpenWrite::"optx" \(\(:\)\(\ \)\) 
      "Unknown option \!\(BinaryFormat\) in \
\!\(OpenWrite[\(\(\"scale1.6_vacua.math.dat\", \(\(BinaryFormat \[Rule] \
True\)\)\)\)]\)."\)], "Message"]
}, Open  ]],

Cell[BoxData[
    \(\(For\ [\ i = 1, \ 
        i \[LessEqual] \ nuseful, \ \(i++\), \[IndentingNewLine]BinaryWrite[
          strm, StringJoin[ToString[useful2[\([i, 1]\)], CForm], "\< \>", 
            ToString[useful2[\([i, 2]\)], 
              CForm], "\<\n\>"]\ ]\[IndentingNewLine]];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\[IndentingNewLine]\(Close[strm];\)\), "\[IndentingNewLine]", 
    \(\(Clear[strm];\)\)}], "Input"],

Cell[BoxData[
    \(General::"stream" \(\(:\)\(\ \)\) 
      "\!\(OpenWrite[\(\(\"scale1.6_vacua.math.dat\", \(\(BinaryFormat \
\[Rule] True\)\)\)\)]\) is not a string, InputStream[ ], or OutputStream[ ]."\
\)], "Message"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[
    \(WF[x_] := WeierstrassP[x, gg]\)], "Input"],

Cell[BoxData[
    \(WW[x1_, x2_] := 
      WF[x1 + x2] + 
        WF[x1 - x2] + \((1/2)\)\ \((WF[x1] + WF[x2] + WF[x1 + Pi\ I] - 
              WF[Pi\ I] + WF[x2 + Pi\ I] - WF[Pi\ I])\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\(outname = \ 
      StringJoin["\<scale\>", \ 
        ToString[Abs[\[Tau]]], "\<_spotential.dat\>"]\)\)\)], "Input"],

Cell[BoxData[
    \("scale1.6_spotential.dat"\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(values\  = \ 
        Table\ [\ {Null, \ Null}, \ {n, \ 1, \ nuseful}\ ];\)\)], "Input"],

Cell[BoxData[
    \(\(For\ [i = 1, \ 
        i \[LessEqual] 
          nuseful, \(i++\), \[IndentingNewLine]tmpval\  = \ \ WW[\ \[Omega]2, \
\[IndentingNewLine]\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ \ \ \ \ useful2[\([i, 1]\)]\  + \ I\ useful2[\([i, 2]\)]\ \ ]\  // 
            N; \[IndentingNewLine]values[\([i, 1]\)]\  = \ 
          Re[tmpval]; \[IndentingNewLine]values[\([i, 2]\)]\  = \ 
          Im[tmpval];\[IndentingNewLine]];\)\)], "Input"],

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\(Export[outname, \ 
        values, "\<Table\>"];\)\)\)], "Input"]
},
FrontEndVersion->"4.1 for X",
ScreenRectangle->{{0, 1280}, {0, 1024}},
WindowSize->{1168, 781},
WindowMargins->{{48, Automatic}, {18, Automatic}},
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"PaperSize"->{612, 792},
"PaperOrientation"->"Portrait",
"PostScriptOutputFile":>FrontEnd`FileName[{$RootDirectory, "home", \
"bolokhov", "mvacua", "math"}, "so5_proper5.nb.ps", CharacterEncoding -> \
"ISO8859-1"],
"Magnification"->1},
Magnification->1.25
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{
Cell[1705, 50, 26, 0, 32, "Input"],
Cell[1734, 52, 132, 3, 68, "Input"],
Cell[1869, 57, 69, 1, 32, "Input"],

Cell[CellGroupData[{
Cell[1963, 62, 123, 2, 68, "Input"],
Cell[2089, 66, 53, 1, 33, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[2179, 72, 126, 3, 33, "Input"],
Cell[2308, 77, 54, 1, 33, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[2399, 83, 64, 1, 32, "Input"],
Cell[2466, 86, 57, 1, 33, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[2560, 92, 102, 2, 32, "Input"],
Cell[2665, 96, 106, 2, 33, "Output"]
}, Open  ]],
Cell[2786, 101, 77, 1, 32, "Input"],
Cell[2866, 104, 166, 3, 58, "Input"],
Cell[3035, 109, 108, 2, 50, "Input"],

Cell[CellGroupData[{
Cell[3168, 115, 41, 1, 32, "Input"],
Cell[3212, 118, 37, 1, 33, "Output"]
}, Open  ]],
Cell[3264, 122, 26, 0, 32, "Input"],
Cell[3293, 124, 113, 2, 50, "Input"],
Cell[3409, 128, 26, 0, 32, "Input"],
Cell[3438, 130, 89, 1, 32, "Input"],
Cell[3530, 133, 104, 2, 68, "Input"],
Cell[3637, 137, 128, 3, 50, "Input"],
Cell[3768, 142, 26, 0, 32, "Input"],

Cell[CellGroupData[{
Cell[3819, 146, 1260, 25, 302, "Input"],
Cell[5082, 173, 166, 3, 28, "Message"],
Cell[5251, 178, 166, 3, 28, "Message"],
Cell[5420, 183, 166, 3, 28, "Message"],
Cell[5589, 188, 167, 3, 28, "Message"]
}, Open  ]],

Cell[CellGroupData[{
Cell[5793, 196, 26, 0, 32, "Input"],
Cell[5822, 198, 80, 2, 28, "Message"]
}, Open  ]],

Cell[CellGroupData[{
Cell[5939, 205, 40, 1, 32, "Input"],
Cell[5982, 208, 37, 1, 33, "Output"]
}, Open  ]],
Cell[6034, 212, 103, 2, 32, "Input"],
Cell[6140, 216, 90, 1, 32, "Input"],

Cell[CellGroupData[{
Cell[6255, 221, 146, 3, 32, "Input"],
Cell[6404, 226, 22591, 656, 292, 7153, 461, "GraphicsData", "PostScript", \
"Graphics"],
Cell[28998, 884, 130, 3, 33, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[29165, 892, 124, 3, 32, "Input"],
Cell[29292, 897, 50, 1, 33, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[29379, 903, 136, 2, 50, "Input"],
Cell[29518, 907, 57, 1, 33, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[29612, 913, 106, 2, 32, "Input"],
Cell[29721, 917, 58, 1, 33, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[29816, 923, 140, 3, 32, "Input"],
Cell[29959, 928, 207, 4, 28, "Message"]
}, Open  ]],
Cell[30181, 935, 305, 5, 68, "Input"],

Cell[CellGroupData[{
Cell[30511, 944, 120, 2, 68, "Input"],
Cell[30634, 948, 222, 4, 47, "Message"]
}, Open  ]],
Cell[30871, 955, 26, 0, 32, "Input"],
Cell[30900, 957, 62, 1, 32, "Input"],
Cell[30965, 960, 198, 4, 32, "Input"],

Cell[CellGroupData[{
Cell[31188, 968, 163, 3, 50, "Input"],
Cell[31354, 973, 59, 1, 33, "Output"]
}, Open  ]],
Cell[31428, 977, 110, 2, 32, "Input"],
Cell[31541, 981, 477, 8, 122, "Input"],
Cell[32021, 991, 112, 2, 50, "Input"]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

