(************** Content-type: application/mathematica **************

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     26872,        818]*)
(*NotebookOutlinePosition[     27823,        848]*)
(*  CellTagsIndexPosition[     27779,        844]*)
(*WindowFrame->Normal*)



Notebook[{
Cell[BoxData[""], "Input"],

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\(\(<< 
      Graphics`MultipleListPlot`\)\(\[IndentingNewLine]\)
    \)\)\)], "Input"],

Cell[BoxData[
    \(<< LinearAlgebra`MatrixManipulation`\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)\(\[Tau]\  = 
      4  \[ImaginaryI]\)\)\)], "Input"],

Cell[BoxData[
    \(4\ \[ImaginaryI]\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{
      StyleBox["\[Omega]1",
        FontSize->16], "=", "  ", \(\[Pi]\ \[ImaginaryI]\)}]], "Input"],

Cell[BoxData[
    \(\[ImaginaryI]\ \[Pi]\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\[Omega]2 = \ \[Omega]1\ \[Tau]\)], "Input"],

Cell[BoxData[
    \(\(-4\)\ \[Pi]\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(gg\  = \ 
      WeierstrassInvariants\ [\ {\[Omega]1, \ \[Omega]2}\ ]\)], "Input"],

Cell[BoxData[
    \(WeierstrassInvariants[{\[ImaginaryI]\ \[Pi], \(-4\)\ \[Pi]}]\)], \
"Output"]
}, Open  ]],

Cell[BoxData[
    \(WP[x_]\  := \ WeierstrassPPrime[\ x, \ gg\ ]\)], "Input"],

Cell[BoxData[
    \(eqn[x2_\ ]\  := \ 
      WP\ [\ x2\  + \ \ \[Omega]2\ ]\  + \ \(1\/4\) \((\ 
            WP[\ x2\ ]\  + \ WP[x2\  + \ \[Omega]1]\ )\)\)], "Input"],

Cell[BoxData[
    \(\(\(sys\  := \ {\ eqn[x2]\  \[Equal] \ 0\ }\)\(\[IndentingNewLine]\)
    \)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(np = 100\)], "Input"],

Cell[BoxData[
    \(100\)], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[{
    \(\(Clear \((soln1)\);\)\), "\[IndentingNewLine]", 
    \(\(Clear \((soln2)\);\)\)}], "Input"],

Cell[BoxData[""], "Input"],

Cell[BoxData[
    \(\(soln2\  = \ Table[\ {\ Null, \ Null}, \ {n, 1, np}];\)\)], "Input"],

Cell[BoxData[
    \(\(\(nuseful = 0;\)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)
    \)\)], "Input"],

Cell[BoxData[
    \(\(\(der\  = \ 
        Table[\ {\ Null, \ Null}, \ {n, 1, np}];\)\(\[IndentingNewLine]\)
    \)\)], "Input"],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(For\ [\ i\  = \ 1, \ 
      i\  \[LessEqual] \ np, \ \(i++\), \[IndentingNewLine]\t
      x20\  = \ Random\ [\ 
          Complex, \ {\ 0.1\  + \ 0.1\ \[ImaginaryI], \ 
            2.0 \((Abs[\[Omega]2]\  + \ \[Omega]1)\)\ }\ ]; \
\[IndentingNewLine]\t
      x200 = \ Random\ [\ 
          Complex, \ {\ 0.1\  + \ 0.1\ \[ImaginaryI], \ 
            2.0 \((Abs[\[Omega]2]\  + \ \[Omega]1)\)\ }\ ]; \
\[IndentingNewLine]\tgoterror = False; \[IndentingNewLine]\t
      Check[result\  = \ 
          FindRoot[\ 
            eqn[x2]\  \[Equal] \ 0, \ {\ x2, \ x20, \ 
              x200\ }]\ , \[IndentingNewLine]\t\t\t\tgoterror = 
          True]; \[IndentingNewLine]\t\ If[
        goterror === 
          False, \[IndentingNewLine]\t\(nuseful++\); \[IndentingNewLine]\t\ \
x2r\ \ \  = \ \ x2 /. 
            result; \[IndentingNewLine]\ \ \ \ \ \ \ \ \ \ soln2[\([nuseful, 
              1]\)]\  = \ Re[x2r]; \[IndentingNewLine]\t
        soln2[\([nuseful, 2]\)]\  = \ Im[x2r]; \[IndentingNewLine]\t
        val2\  = \ eqn[x2r]\ \  // N; \[IndentingNewLine]\t
        der[\([nuseful, \ 1]\)]\  = \ Re[val2]; \[IndentingNewLine]\t
        der[\([nuseful, \ 2]\)]\  = \ 
          Im[val2];\[IndentingNewLine]]\[IndentingNewLine]]\)], "Input"],

Cell[BoxData[
    \(FindRoot::"frsec" \(\(:\)\(\ \)\) 
      "Secant method failed to converge to the prescribed accuracy after \
\!\(15\) iterations."\)], "Message"],

Cell[BoxData[
    \(FindRoot::"frsec" \(\(:\)\(\ \)\) 
      "Secant method failed to converge to the prescribed accuracy after \
\!\(15\) iterations."\)], "Message"],

Cell[BoxData[
    \(FindRoot::"frsec" \(\(:\)\(\ \)\) 
      "Secant method failed to converge to the prescribed accuracy after \
\!\(15\) iterations."\)], "Message"],

Cell[BoxData[
    \(General::"stop" \(\(:\)\(\ \)\) 
      "Further output of \!\(FindRoot :: \"frsec\"\) will be suppressed \
during this calculation."\)], "Message"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Message",
  GeneratedCell->False,
  CellAutoOverwrite->False]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(nuseful\)], "Input"],

Cell[BoxData[
    \(76\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(useful2\  = \ 
        SubMatrix[soln2, \ {1, 1}, \ {nuseful, 2}];\)\)], "Input"],

Cell[BoxData[
    \(\(deruseful\  = \ SubMatrix[der, {1, 1}, {nuseful, 4}];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ListPlot[useful2, 
      PlotRange \[Rule] {{0.0, 2.0\ Abs[\[Omega]2]}, {0.0, 
            2.0\ Abs[\[Omega]1]}}]\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-1.14383e-17 0.0397887 1.33086e-17 0.0983632 [
[.19894 -0.0125 -3 -9 ]
[.19894 -0.0125 3 0 ]
[.39789 -0.0125 -6 -9 ]
[.39789 -0.0125 6 0 ]
[.59683 -0.0125 -6 -9 ]
[.59683 -0.0125 6 0 ]
[.79577 -0.0125 -6 -9 ]
[.79577 -0.0125 6 0 ]
[.99472 -0.0125 -6 -9 ]
[.99472 -0.0125 6 0 ]
[-0.0125 .09836 -6 -4.5 ]
[-0.0125 .09836 0 4.5 ]
[-0.0125 .19673 -6 -4.5 ]
[-0.0125 .19673 0 4.5 ]
[-0.0125 .29509 -6 -4.5 ]
[-0.0125 .29509 0 4.5 ]
[-0.0125 .39345 -6 -4.5 ]
[-0.0125 .39345 0 4.5 ]
[-0.0125 .49182 -6 -4.5 ]
[-0.0125 .49182 0 4.5 ]
[-0.0125 .59018 -6 -4.5 ]
[-0.0125 .59018 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.19894 0 m
.19894 .00625 L
s
[(5)] .19894 -0.0125 0 1 Mshowa
.39789 0 m
.39789 .00625 L
s
[(10)] .39789 -0.0125 0 1 Mshowa
.59683 0 m
.59683 .00625 L
s
[(15)] .59683 -0.0125 0 1 Mshowa
.79577 0 m
.79577 .00625 L
s
[(20)] .79577 -0.0125 0 1 Mshowa
.99472 0 m
.99472 .00625 L
s
[(25)] .99472 -0.0125 0 1 Mshowa
.125 Mabswid
.03979 0 m
.03979 .00375 L
s
.07958 0 m
.07958 .00375 L
s
.11937 0 m
.11937 .00375 L
s
.15915 0 m
.15915 .00375 L
s
.23873 0 m
.23873 .00375 L
s
.27852 0 m
.27852 .00375 L
s
.31831 0 m
.31831 .00375 L
s
.3581 0 m
.3581 .00375 L
s
.43768 0 m
.43768 .00375 L
s
.47746 0 m
.47746 .00375 L
s
.51725 0 m
.51725 .00375 L
s
.55704 0 m
.55704 .00375 L
s
.63662 0 m
.63662 .00375 L
s
.67641 0 m
.67641 .00375 L
s
.7162 0 m
.7162 .00375 L
s
.75599 0 m
.75599 .00375 L
s
.83556 0 m
.83556 .00375 L
s
.87535 0 m
.87535 .00375 L
s
.91514 0 m
.91514 .00375 L
s
.95493 0 m
.95493 .00375 L
s
.25 Mabswid
0 0 m
1 0 L
s
0 .09836 m
.00625 .09836 L
s
[(1)] -0.0125 .09836 1 0 Mshowa
0 .19673 m
.00625 .19673 L
s
[(2)] -0.0125 .19673 1 0 Mshowa
0 .29509 m
.00625 .29509 L
s
[(3)] -0.0125 .29509 1 0 Mshowa
0 .39345 m
.00625 .39345 L
s
[(4)] -0.0125 .39345 1 0 Mshowa
0 .49182 m
.00625 .49182 L
s
[(5)] -0.0125 .49182 1 0 Mshowa
0 .59018 m
.00625 .59018 L
s
[(6)] -0.0125 .59018 1 0 Mshowa
.125 Mabswid
0 .01967 m
.00375 .01967 L
s
0 .03935 m
.00375 .03935 L
s
0 .05902 m
.00375 .05902 L
s
0 .07869 m
.00375 .07869 L
s
0 .11804 m
.00375 .11804 L
s
0 .13771 m
.00375 .13771 L
s
0 .15738 m
.00375 .15738 L
s
0 .17705 m
.00375 .17705 L
s
0 .2164 m
.00375 .2164 L
s
0 .23607 m
.00375 .23607 L
s
0 .25574 m
.00375 .25574 L
s
0 .27542 m
.00375 .27542 L
s
0 .31476 m
.00375 .31476 L
s
0 .33443 m
.00375 .33443 L
s
0 .35411 m
.00375 .35411 L
s
0 .37378 m
.00375 .37378 L
s
0 .41313 m
.00375 .41313 L
s
0 .4328 m
.00375 .4328 L
s
0 .45247 m
.00375 .45247 L
s
0 .47214 m
.00375 .47214 L
s
0 .51149 m
.00375 .51149 L
s
0 .53116 m
.00375 .53116 L
s
0 .55083 m
.00375 .55083 L
s
0 .57051 m
.00375 .57051 L
s
0 .60985 m
.00375 .60985 L
s
.25 Mabswid
0 0 m
0 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.008 w
.5 .30902 Mdot
.82415 .61803 Mdot
.82413 .20601 Mdot
.82414 .206 Mdot
.82413 .206 Mdot
.17586 .206 Mdot
.82414 .41203 Mdot
.5 .30902 Mdot
.82413 .61802 Mdot
.17587 7e-05 Mdot
.82413 .41205 Mdot
.82416 .41198 Mdot
.17585 0 Mdot
.82414 .41202 Mdot
.82415 .20607 Mdot
.17585 .41204 Mdot
.5 .30902 Mdot
.82413 .20599 Mdot
.82414 .206 Mdot
.82414 .41204 Mdot
.17588 .20597 Mdot
.82416 .20603 Mdot
.82414 .41204 Mdot
.17586 .20602 Mdot
.82414 .206 Mdot
.17586 .206 Mdot
.82415 0 Mdot
.5 .30902 Mdot
.82414 .412 Mdot
.82414 1e-05 Mdot
.17585 1e-05 Mdot
.17586 .41204 Mdot
.17587 .41207 Mdot
.17586 .41203 Mdot
.82414 .20594 Mdot
.82414 .20604 Mdot
.17586 .41203 Mdot
.17586 .41203 Mdot
.17589 .20603 Mdot
.82414 .41204 Mdot
.82414 .41203 Mdot
.17586 .61803 Mdot
.17586 .20602 Mdot
.17588 .41209 Mdot
.17586 .61803 Mdot
.17586 .206 Mdot
.82414 .61803 Mdot
.82413 .206 Mdot
.17586 .206 Mdot
.82412 .412 Mdot
.82414 .41204 Mdot
.82415 .41206 Mdot
.82414 .20602 Mdot
.82415 .61803 Mdot
.17587 .41205 Mdot
.82413 .206 Mdot
.17586 .206 Mdot
.17586 .206 Mdot
.82414 .206 Mdot
.17583 4e-05 Mdot
.82414 .206 Mdot
.17586 .20603 Mdot
.17587 .20601 Mdot
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{51, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40005X0000gR000`400?l00000o`00003oo`3ooomY
0?ooo`00o`3ooomY0?ooo`00D03oool4000003X0oooo1@0000030?ooo`@00000=P3oool5000000<0
oooo1000000f0?ooo`H000000`3oool4000003D0oooo1P0000030?ooo`@000001`3oool005@0oooo
00<000000?ooo`3oool0>@3oool00`000000oooo0?ooo`020?ooo`8000000P3oool2000003L0oooo
00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0d0?ooo`050000003oool0oooo0?ooo`00
00000P3oool200000080oooo0P00000e0?ooo`050000003oool0oooo0?ooo`0000001`3oool00`00
0000oooo0?ooo`040?ooo`00E03oool00`000000oooo0?ooo`0i0?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0e0?ooo`030000003oool0oooo00L0
oooo00<000000?ooo`3oool0=@3oool2000000@0oooo00<000000?ooo`3oool00P3oool00`000000
oooo0?ooo`0d0?ooo`8000002@3oool00`000000oooo0?ooo`040?ooo`00E03oool00`000000oooo
0?ooo`0i0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00P3oool00`000000oooo
0?ooo`0e0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0=`3oool01@000000oooo
0?ooo`3oool0000000@0oooo00<000000?ooo`3oool0=P3oool00`000000oooo0?ooo`060?ooo`03
0000003oool0oooo00@0oooo001@0?ooo`030000003oool0oooo00800000>`3oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0=@3oool00`000000oooo
0?ooo`030?ooo`030000003oool0oooo00800000>P3oool010000000oooo0?ooo`0000040?ooo`03
0000003oool0oooo03L0oooo00D000000?ooo`3oool0oooo000000020?ooo`8000001P3oool00500
oooo1000000l0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00P3oool00`000000
oooo0?ooo`0e0?ooo`030000003oool0oooo00<0oooo1000000k0?ooo`040000003oool0oooo0000
00@0oooo00<000000?ooo`3oool0=`3oool010000000oooo0?ooo`3oool4000000L0oooo001@0?oo
o`030000003oool0oooo03d0oooo00<000000?ooo`3oool00P3oool200000080oooo0P00000g0?oo
o`030000003oool0oooo00<0oooo00<000000?ooo`3oool0=`3oool00`000000oooo0?ooo`020?oo
o`030000003oool0oooo008000000P3oool2000003@0oooo00<000000?ooo`3oool00P3oool01@00
0000oooo0?ooo`3oool0000000X0oooo001@0?ooo`D00000>P3oool2000000D0oooo1000000g0?oo
o`8000001@3oool5000003H0oooo100000040?ooo`@00000=P3oool4000000@0oooo1@0000060?oo
o`00o`3ooomY0?ooo`00o`3ooomY0?ooo`00o`3ooomY0?ooo`00o`3ooomY0?ooo`00o`3ooomY0?oo
o`00B@3oool200000=H0oooo0P0000150?ooo`003`3ooooo0000050000002P3oool000l0oooo00<0
00000?ooo`3oool02`3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<0
00000?ooo`3oool02P3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00X0oooo00<0
00000?ooo`3oool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00/0oooo00<0
00000?ooo`3oool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<0
00000?ooo`3oool02`3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<0
00000?ooo`3oool02P3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00X0oooo00<0
00000?ooo`3oool02P3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00X0oooo00<0
00000?ooo`3oool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00/0oooo00<0
00000?ooo`3oool02P3oool00`000000oooo0?ooo`0:0?ooo`003`3oool00`000000oooo0?ooo`10
0?ooo`030000003oool0oooo03l0oooo00<000000?ooo`3oool0?`3oool00`000000oooo0?ooo`10
0?ooo`030000003oool0oooo03l0oooo00<000000?ooo`3oool02P3oool000l0oooo00<000000?oo
o`3oool0o`3ooomG0?ooo`003`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000
003oool0oooo0?l0ooooE`3oool000l0oooo0`00003o0?oooeL0oooo000?0?ooo`030000003oool0
oooo0?l0ooooE`3oool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`003`3oool00`000000
oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000l0oooo00<0
00000?ooo`3oool0o`3ooomG0?ooo`003`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?oo
o`<00000o`3ooomG0?ooo`003`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000
003oool0oooo0?l0ooooE`3oool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`003`3oool0
0`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000l0
oooo0`00003o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000l0oooo00<0
00000?ooo`3oool0o`3ooomG0?ooo`003`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?oo
o`030000003oool0oooo0?l0ooooE`3oool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`00
3`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`<00000o`3ooomG0?ooo`003`3oool0
0`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000l0
oooo00<000000?ooo`3oool0o`3ooomG0?ooo`001@3oool5000000D0oooo00<000000?ooo`3oool0
o`3ooomG0?ooo`001`3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo0?l0ooooE`3o
ool000L0oooo00<000000?ooo`3oool01@3oool300000?l0ooooE`3oool000L0oooo00<000000?oo
o`3oool01@3oool00`000000oooo0?ooo`3o0?oooeL0oooo00070?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool0o`3ooomG0?ooo`001`3oool00`000000oooo0?ooo`050?ooo`030000
003oool0oooo0?l0ooooE`3oool000L0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?oo
o`3o0?oooeL0oooo00060?ooo`8000001`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?oo
o`030000003oool0oooo0?l0ooooE`3oool000l0oooo0`00003o0?oooeL0oooo000?0?ooo`030000
003oool0oooo0?l0ooooE`3oool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`003`3oool0
0`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000l0
oooo00<000000?ooo`3oool0o`3ooomG0?ooo`003`3oool300000?l0ooooE`3oool000l0oooo00<0
00000?ooo`3oool0o`3ooomG0?ooo`003`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?oo
o`030000003oool0oooo0?l0ooooE`3oool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`00
3`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3o
ool000l0oooo0`00003o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000l0
oooo00<000000?ooo`3oool0o`3ooomG0?ooo`003`3oool00`000000oooo0?ooo`3o0?oooeL0oooo
000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000l0oooo00<000000?ooo`3oool0o`3ooomG
0?ooo`003`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`<00000o`3ooomG0?ooo`00
3`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3o
ool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`00103oool6000000D0oooo00<000000?oo
o`3oool0o`3ooomG0?ooo`001@3oool01@000000oooo0?ooo`3oool0000000D0oooo00<000000?oo
o`3oool0o`3ooomG0?ooo`001P3oool2000000L0oooo0`00003o0?oooeL0oooo00080?ooo`030000
003oool0oooo00@0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`002@3oool00`000000oooo0?oo
o`030?ooo`030000003oool0oooo0?l0ooooE`3oool000T0oooo00<000000?ooo`3oool00`3oool0
0`000000oooo0?ooo`0g0?ooo`800000eP3oool2000004D0oooo00040?ooo`030000003oool0oooo
0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0h0?ooo`030000003oool0oooo
0=D0oooo00<000000?ooo`3oool0@`3oool000D0oooo100000060?ooo`030000003oool0oooo0?l0
ooooE`3oool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`003`3oool300000?l0ooooE`3o
ool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`003`3oool00`000000oooo0?ooo`3o0?oo
oeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000l0oooo00<000000?ooo`3oool0
o`3ooomG0?ooo`003`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`<00000o`3ooomG
0?ooo`003`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0
ooooE`3oool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`003`3oool00`000000oooo0?oo
o`3o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000l0oooo00<000000?oo
o`3oool0o`3ooomG0?ooo`003`3oool300000?l0ooooE`3oool000l0oooo00<000000?ooo`3oool0
o`3ooomG0?ooo`003`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000003oool0
oooo0?l0ooooE`3oool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`003`3oool00`000000
oooo0?ooo`3o0?oooeL0oooo000?0?ooo`<00000o`3ooomG0?ooo`003`3oool00`000000oooo0?oo
o`3o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000l0oooo00<000000?oo
o`3oool0o`3ooomG0?ooo`00103oool4000000L0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`00
203oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0?l0ooooE`3oool000P0oooo00<0
00000?ooo`3oool0103oool00`000000oooo0?ooo`3o0?oooeL0oooo00080?ooo`030000003oool0
oooo00@0oooo0`00003o0?oooeL0oooo00060?ooo`8000001`3oool00`000000oooo0?ooo`3o0?oo
oeL0oooo00080?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`00
203oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0?l0ooooE`3oool000D0oooo0`00
00070?ooo`030000003oool0oooo0:<0oooo0P00002a0?ooo`003`3oool00`000000oooo0?ooo`2T
0?ooo`030000003oool0oooo0:l0oooo000?0?ooo`<00000o`3ooomG0?ooo`003`3oool00`000000
oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000l0oooo00<0
00000?ooo`3oool0o`3ooomG0?ooo`003`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?oo
o`030000003oool0oooo0?l0ooooE`3oool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`00
3`3oool300000?l0ooooE`3oool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`003`3oool0
0`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000l0
oooo00<000000?ooo`3oool0o`3ooomG0?ooo`003`3oool00`000000oooo0?ooo`3o0?oooeL0oooo
000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000l0oooo0`00003o0?oooeL0oooo000?0?oo
o`030000003oool0oooo0?l0ooooE`3oool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`00
3`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3o
ool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`003`3oool300000?l0ooooE`3oool000l0
oooo00<000000?ooo`3oool0o`3ooomG0?ooo`003`3oool00`000000oooo0?ooo`3o0?oooeL0oooo
000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000H0oooo0`0000060?ooo`030000003oool0
oooo0?l0ooooE`3oool000L0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`3o0?oo
oeL0oooo00040?ooo`D000001P3oool00`000000oooo0?ooo`3o0?oooeL0oooo00040?ooo`040000
003oool0oooo000000L0oooo0`00003o0?oooeL0oooo00050?ooo`030000003oool0000000L0oooo
00<000000?ooo`3oool0o`3ooomG0?ooo`001@3oool00`000000oooo000000070?ooo`030000003o
ool0oooo0?l0ooooE`3oool000H0oooo0P0000070?ooo`030000003oool0oooo0?l0ooooE`3oool0
00L0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`03
0000003oool0oooo0?l0ooooE`3oool000l0oooo0`00000g0?ooo`800000eP3oool2000004D0oooo
000?0?ooo`030000003oool0oooo03P0oooo00<000000?ooo`3oool0e@3oool00`000000oooo0?oo
o`130?ooo`003`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000003oool0oooo
0?l0ooooE`3oool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`003`3oool00`000000oooo
0?ooo`3o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000l0oooo0`00003o
0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000l0oooo00<000000?ooo`3o
ool0o`3ooomG0?ooo`003`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000003o
ool0oooo0?l0ooooE`3oool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`003`3oool30000
0?l0ooooE`3oool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`003`3oool00`000000oooo
0?ooo`3o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000l0oooo00<00000
0?ooo`3oool0o`3ooomG0?ooo`003`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`03
0000003oool0oooo0?l0ooooE`3oool000l0oooo0`00003o0?oooeL0oooo000?0?ooo`030000003o
ool0oooo0?l0ooooE`3oool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`003`3oool00`00
0000oooo0?ooo`3o0?oooeL0oooo00050?ooo`@000001P3oool00`000000oooo0?ooo`3o0?oooeL0
oooo00090?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`002@3o
ool00`000000oooo0?ooo`030?ooo`<00000o`3ooomG0?ooo`002@3oool00`000000oooo0?ooo`03
0?ooo`030000003oool0oooo0?l0ooooE`3oool000D0oooo00<000000?ooo`3oool00P0000050?oo
o`030000003oool0oooo0?l0ooooE`3oool000D0oooo100000060?ooo`030000003oool0oooo0?l0
ooooE`3oool000D0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`3o0?oooeL0oooo
00050?ooo`D000001@3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000003oool0
oooo0?l0ooooE`3oool000l0oooo0`00003o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0
ooooE`3oool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`003`3oool00`000000oooo0?oo
o`3o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000l0oooo00<000000?oo
o`3oool0o`3ooomG0?ooo`003`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`<00000
o`3ooomG0?ooo`003`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000003oool0
oooo0?l0ooooE`3oool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`003`3oool00`000000
oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000l0oooo0`00
003o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000l0oooo00<000000?oo
o`3oool0o`3ooomG0?ooo`003`3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000
003oool0oooo0?l0ooooE`3oool000l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`003`3oool0
0`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`<00000o`3ooomG0?ooo`003`3oool00`000000
oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3oool000l0oooo00<0
00000?ooo`3oool0o`3ooomG0?ooo`001@3oool4000000H0oooo00<000000?ooo`3oool0o`3ooomG
0?ooo`00103oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?oo
o`3oool0o`3ooomG0?ooo`00103oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0
oooo0`00003o0?oooeL0oooo00040?ooo`8000000P3oool2000000D0oooo00<000000?ooo`3oool0
o`3ooomG0?ooo`00103oool00`000000oooo00000002000000H0oooo00<000000?ooo`3oool0o`3o
oomG0?ooo`00103oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo0?l0ooooE`3oool0
00D0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`3o0?oooeL0oooo00060?ooo`@0
00001@3oool00`000000oooo0?ooo`3o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0oooo
E`3oool000l0oooo0`00003o0?oooeL0oooo000?0?ooo`030000003oool0oooo0?l0ooooE`3oool0
00l0oooo00<000000?ooo`3oool0o`3ooomG0?ooo`00\
\>"],
  ImageRangeCache->{{{0, 359}, {221.375, 0}} -> {-1.1945, -0.470316, \
0.094272, 0.0381338}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(pref\  = \ 
      StringJoin["\<scale\>"\ , \ 
        ToString[Abs[\[Tau]]], "\<_vacua\>"]\)], "Input"],

Cell[BoxData[
    \("scale4_vacua"\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\(Export[StringJoin[pref, "\<_x2.dat\>"], \ 
      useful2, \ "\<Table\>"]\)\)\)], "Input"],

Cell[BoxData[
    \("scale4_vacua_x2.dat"\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Export[StringJoin[pref, "\<_der.dat\>"], 
      deruseful, \ "\<Table\>"]\)], "Input"],

Cell[BoxData[
    \("scale4_vacua_der.dat"\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(strm\  = \ 
        OpenWrite[StringJoin[pref, "\<.math.dat\>"], 
          BinaryFormat \[Rule] True];\)\)], "Input"],

Cell[BoxData[
    \(OpenWrite::"optx" \(\(:\)\(\ \)\) 
      "Unknown option \!\(BinaryFormat\) in \
\!\(OpenWrite[\(\(\"scale4_vacua.math.dat\", \(\(BinaryFormat \[Rule] \
True\)\)\)\)]\)."\)], "Message"]
}, Open  ]],

Cell[BoxData[
    \(\(For\ [\ i = 1, \ 
        i \[LessEqual] \ nuseful, \ \(i++\), \[IndentingNewLine]BinaryWrite[
          strm, StringJoin[ToString[useful2[\([i, 1]\)], CForm], "\< \>", 
            ToString[useful2[\([i, 2]\)], 
              CForm], "\<\n\>"]\ ]\[IndentingNewLine]];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\[IndentingNewLine]\(Close[strm];\)\), "\[IndentingNewLine]", 
    \(\(Clear[strm];\)\)}], "Input"],

Cell[BoxData[
    \(General::"stream" \(\(:\)\(\ \)\) 
      "\!\(OpenWrite[\(\(\"scale4_vacua.math.dat\", \(\(BinaryFormat \[Rule] \
True\)\)\)\)]\) is not a string, InputStream[ ], or OutputStream[ ]."\)], \
"Message"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[
    \(WF[x_] := WeierstrassP[x, gg]\)], "Input"],

Cell[BoxData[
    \(WW[x1_, x2_] := 
      WF[x1 + x2] + 
        WF[x1 - x2] + \((1/2)\)\ \((WF[x1] + WF[x2] + WF[x1 + Pi\ I] - 
              WF[Pi\ I] + WF[x2 + Pi\ I] - WF[Pi\ I])\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\(outname = \ 
      StringJoin["\<scale\>", \ 
        ToString[Abs[\[Tau]]], "\<_spotential.dat\>"]\)\)\)], "Input"],

Cell[BoxData[
    \("scale4_spotential.dat"\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(values\  = \ 
        Table\ [\ {Null, \ Null}, \ {n, \ 1, \ nuseful}\ ];\)\)], "Input"],

Cell[BoxData[
    \(\(For\ [i = 1, \ 
        i \[LessEqual] 
          nuseful, \(i++\), \[IndentingNewLine]tmpval\  = \ \ WW[\ \[Omega]2, \
\[IndentingNewLine]\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ \ \ \ \ useful2[\([i, 1]\)]\  + \ I\ useful2[\([i, 2]\)]\ \ ]\  // 
            N; \[IndentingNewLine]values[\([i, 1]\)]\  = \ 
          Re[tmpval]; \[IndentingNewLine]values[\([i, 2]\)]\  = \ 
          Im[tmpval];\[IndentingNewLine]];\)\)], "Input"],

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\(Export[outname, \ 
        values, "\<Table\>"];\)\)\)], "Input"]
},
FrontEndVersion->"4.1 for X",
ScreenRectangle->{{0, 1280}, {0, 1024}},
WindowSize->{1168, 781},
WindowMargins->{{Automatic, -153}, {74, Automatic}},
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"PaperSize"->{612, 792},
"PaperOrientation"->"Portrait",
"PostScriptOutputFile":>FrontEnd`FileName[{$RootDirectory, "home", \
"bolokhov", "mvacua", "math"}, "so5_proper5.nb.ps", CharacterEncoding -> \
"ISO8859-1"],
"Magnification"->1},
Magnification->1.25
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{
Cell[1705, 50, 26, 0, 32, "Input"],
Cell[1734, 52, 132, 3, 68, "Input"],
Cell[1869, 57, 69, 1, 32, "Input"],

Cell[CellGroupData[{
Cell[1963, 62, 121, 2, 68, "Input"],
Cell[2087, 66, 50, 1, 33, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[2174, 72, 126, 3, 33, "Input"],
Cell[2303, 77, 54, 1, 33, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[2394, 83, 64, 1, 32, "Input"],
Cell[2461, 86, 47, 1, 33, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[2545, 92, 102, 2, 32, "Input"],
Cell[2650, 96, 96, 2, 33, "Output"]
}, Open  ]],
Cell[2761, 101, 77, 1, 32, "Input"],
Cell[2841, 104, 166, 3, 58, "Input"],
Cell[3010, 109, 108, 2, 50, "Input"],

Cell[CellGroupData[{
Cell[3143, 115, 41, 1, 32, "Input"],
Cell[3187, 118, 37, 1, 33, "Output"]
}, Open  ]],
Cell[3239, 122, 26, 0, 32, "Input"],
Cell[3268, 124, 113, 2, 50, "Input"],
Cell[3384, 128, 26, 0, 32, "Input"],
Cell[3413, 130, 89, 1, 32, "Input"],
Cell[3505, 133, 104, 2, 68, "Input"],
Cell[3612, 137, 128, 3, 50, "Input"],
Cell[3743, 142, 26, 0, 32, "Input"],

Cell[CellGroupData[{
Cell[3794, 146, 1260, 25, 302, "Input"],
Cell[5057, 173, 166, 3, 28, "Message"],
Cell[5226, 178, 166, 3, 28, "Message"],
Cell[5395, 183, 166, 3, 28, "Message"],
Cell[5564, 188, 167, 3, 28, "Message"]
}, Open  ]],

Cell[CellGroupData[{
Cell[5768, 196, 26, 0, 32, "Input"],
Cell[5797, 198, 80, 2, 28, "Message"]
}, Open  ]],

Cell[CellGroupData[{
Cell[5914, 205, 40, 1, 32, "Input"],
Cell[5957, 208, 36, 1, 33, "Output"]
}, Open  ]],
Cell[6008, 212, 103, 2, 32, "Input"],
Cell[6114, 216, 90, 1, 32, "Input"],

Cell[CellGroupData[{
Cell[6229, 221, 146, 3, 32, "Input"],
Cell[6378, 226, 17364, 479, 233, 4362, 314, "GraphicsData", "PostScript", \
"Graphics"],
Cell[23745, 707, 130, 3, 33, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[23912, 715, 124, 3, 32, "Input"],
Cell[24039, 720, 48, 1, 33, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[24124, 726, 136, 2, 50, "Input"],
Cell[24263, 730, 55, 1, 33, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[24355, 736, 106, 2, 32, "Input"],
Cell[24464, 740, 56, 1, 33, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[24557, 746, 140, 3, 32, "Input"],
Cell[24700, 751, 205, 4, 28, "Message"]
}, Open  ]],
Cell[24920, 758, 305, 5, 68, "Input"],

Cell[CellGroupData[{
Cell[25250, 767, 120, 2, 68, "Input"],
Cell[25373, 771, 220, 4, 47, "Message"]
}, Open  ]],
Cell[25608, 778, 26, 0, 32, "Input"],
Cell[25637, 780, 62, 1, 32, "Input"],
Cell[25702, 783, 198, 4, 32, "Input"],

Cell[CellGroupData[{
Cell[25925, 791, 163, 3, 50, "Input"],
Cell[26091, 796, 57, 1, 33, "Output"]
}, Open  ]],
Cell[26163, 800, 110, 2, 32, "Input"],
Cell[26276, 804, 477, 8, 122, "Input"],
Cell[26756, 814, 112, 2, 50, "Input"]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

